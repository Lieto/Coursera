il_vars_index
vars_index <- grep("^IL_" | "^diagnosis", names(training))
vars_index <- c(grep("^diagnosis", names(training)), grep("^IL_", names(training)))
vars_index
preProc <- preProcess(training[, vars_index], method="pca", thresh = 0.80)
preProc <- preProcess(training[, il_vars_index], method="pca", thresh = 0.80)
?predict
?caret
?fit
?predict
fit <- train(diagnosis ~., data = training[, vars_index], method = "glm")
fit
predict(fit, data=testing[, vars_index])
predict(fit)
predict(fit, data=testing[, il_vars_index])
predict(fit, newdata = testing[,vars_index])
koe <- predict(fit, newdata = testing[,vars_index])
confusionMatrix(data=koe, testing$diagnosis)
rm(ls = ls())
rm(list = ls())
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = 'red')
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
lhs-rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slopem ols.ic))
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, galton)
sqrt(sum(pow(fit$residuals, 2))/(n-2))
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(galton$child - fit)
sRes <- deviance(fit$residuals^2)
sRes <- deviance(sum(fit$residuals^2)
)
sRes <- deviance(sum(fit$residuals^2))
sRes <- deviance(fit$residuals
)
?deviance
sRes <- deviance(fit)
1 - sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
quit()
swirl()
swirl
library(swirl)
rm(list = ls())
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent - 1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
all <- lm(Fertility ~ ., swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Education, swiss$Examination)
cor(swiss$Education, swiss$Agriculture)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
all - efit
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays, 15)
A
sA
InsectSprays[,2]
summary(InsectSprays[,2])
sapply()
sapply(class)
sapply(class, InsectSprays)
sapply(InsectSprays, class)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, C)
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[3] - fit$coef[2])/1.6011
(fit$coef[2] - fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex == "Female"])
lmF <- lm(Numeric[hunger$Sex == "Female"] ~ Year[hunger$Sex == "Female"], hunger)
lmM <- lm(Numeric[hunger$Sex == "Male"] ~ Year[hunger$Sex == "Male"], hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
quit()
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w*(x-1.077)^2)
sum(w*(x-0.300)^2)
sum(w*(x-0.1471)^2)
sum(w*(x-0.0025)^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
fit$coefficients
fit <- lm(y ~ x - 1)
fit$coefficients
library(datasets)
head(mtcars)
fit2 <- lm(mpg ~ weight, mtcars)
fit2 <- lm(mpg ~ wt, mtcars)
fit2$coefficients
install.packages("UsingR")
library(UsingR)
data(galton)
library(reshape)
long <- melt(galton)
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth = 1)
g <- g + facet_grid(. ~ variable)
g
library(manipulate)
install.packages("manipulate")
library(manipulate)
myHist <- function(mu) { mse <- mean((galton$child - mu)^2); g <- ggplot(galton, aes(x=child)) + geom_histogram(fill="salmon", colour="black", binwidth=1); g <- g + geom_vline(xintercept = mu, size = 3); g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = "")); g }
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean <- mean(x)
mean
?sd
sd <- sd(x)
sd
x(1)
x[0]
x[[0]]
x
x[[1]]
(x[[1]] - mean) / sd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
fit$coefficients
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
sum((x - 0.573)^2)
sum((x - 0.8)^2)
sum((x - 0.36)^2)
sum((x - 0.44)^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
summary(fit)
fit <- lm(I(y - mean(y)) ~ I(x - mean(x) -1)
)
fit$coefficients
fit <- lm(I(y - mean(y)) ~ I(x - mean(x)) -1)
)
fit <- lm(I(y - mean(y)) ~ I(x - mean(x)) - 1)
fit$coefficients
fit <- lm(y ~ x - 1)
fit$coefficients
quit()
rm(list <- ls())
rm(list = ls())
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
summary(fit)
head(mtcars)
fit <- lm(mpg ~ wt, mtars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
fit <- lm(mpg ~ I(wr - mean(wt), mtcars)
)
fit <- lm(mpg ~ I(wr - mean(wt)), mtcars)
fit <- lm(mpg ~ I(wt - mean(wt)), mtcars)
summary(fit)
20.0906 - 0.5384
20.0906 + 0.5384
t.test(fit.coefficients[0])
t.test(fit$coefficients[0])
t.test(fit$coefficients)
fit$coefficients
sumCoef <- summary(fit)$coefficients
sumCoef
sumCoef[1,1]
sumCoef[1,1] + c(-1, 1) * qt(.95, df = fit$df) * sumCoef[1, 2]
fit <- lm(mpg ~ wt, mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.95, df = fit$df) * sumCoef[1, 2]
sumCoef
?mtcars
fit <- lm(mpg ~ I(wt - mean(wt)), mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
fit <- lm(mpg ~ I(wt - 3000/1000), mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
fit <- lm(mpg ~ I(wt - 3000), mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
fit <- lm(mpg ~ I(wt - 3), mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
fit <- lm(mpg ~ wt, mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
fit <- lm(mpg ~ wt, mtcars)
sumCoef <- summary(fit)$coefficients
fit <- lm(mpg ~ I(wt - 3), mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef
fit <- lm(mpg ~ I(wt - mean(wt)), mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
fit <- lm(mpg ~ I(wt - 3, mtcars)
)
fit <- lm(mpg ~ I(wt - 3), mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef
fit
sumamry(fit)
summary(fit)
fit <- lm(mpg ~ wt, mtcars)
predict(fit, data.frame(wt=3), interval="prediction")
fit <- lm(mpg ~I(wt/2), data = mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit <- lm(mpg ~ wt, data = mtcars)
sumCoef <- summary(fit)$coefficients
fit <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
fit <- lm(mpg ~I(wt/2), data = mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
mean(1:5)
?mean
??plotting
??"regression model"
apropos("z$")
apropos("[4-9]")
example("plot")
example(ggplot)
demo()
browseVignettes()
RSiteSearch("{Bayesian regression}")
RSiteSearch("{Bayesian}")
install.packages("installr")
library(installr)
install.Rtools()
install.git()
sd(0:100)
demo(plotmath)
?choose
exit
exit()
quit()
x <- 3
x
x < -3
x<-3
x
x <<- exp(exp(1))
assign("my_local_variable", 9 ^ 3 + 10 ^ 3)
assign("my_local_variable", 9 ^ 3 + 10 ^ 3, globalenv())
z <- rnorm(5); z
(zz <- rlnorm(5))
x
(x)
(x <- 1:10 >= 5)
!x
(y <- 1:10 %% 2 == 0)
x & y
x | y
x <- c(TRUE, FALSE, NA)
xy <- expand.grid(x = x, y = x)
xy
within()
within(
xy,
{}
)
within( xy, { and <- x & y; or <- x | y; not.y <- !y, not.x <- !x  })
within( xy, { and <- x & y; or <- x | y; not.y <- !y; not.x <- !x  })
x == pi
x = 1
x == pi
?Trih
?Trig
atan(1:1000)
x <- 1:1000
x
y <- atan(x)
y
?melt
library(UsingR)
library(reshape)
?melt
head(galton)
long <- melt(galton)
head(long)
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
data("mtcars")
long2 <- melt(mtcars)
head(mtcars)
head(long2)
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
head(mtcars$mpg)
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
library(dplyr)
table <- table(galton$child, galton$parent)
head(table)
?table
freqData <- as.data.frame(table)
head(freqData)
names(freqData) <- c("child", "parent", "freq")
head(freqData)
freqData$child <- as.numeric(as.character(freqData$child))
head(freqData)
freqData$parent <- as.numeric(as.character(freqData$parent))
head(freqData)
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/book.R')
source('D:/Program Files/RStudio/slopeDemo.R')
source('D:/Program Files/RStudio/maths.R')
source('D:/Program Files/RStudio/maths.R')
source('D:/Program Files/RStudio/maths.R')
source('D:/Program Files/RStudio/maths.R')
source('D:/Program Files/RStudio/maths.R')
source('D:/Program Files/RStudio/maths.R')
source('D:/Program Files/RStudio/maths.R')
source('D:/Program Files/RStudio/slopeDemo.R')
source('D:/Program Files/RStudio/regressiontomean.R')
source('D:/Program Files/RStudio/regressiontomean.R')
source('D:/Program Files/RStudio/regressiontomean.R')
source('D:/Program Files/RStudio/regressiontomean.R')
source('D:/Program Files/RStudio/regressiontomean.R')
data("diamond")
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
?pt
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
fit
source('D:/Program Files/RStudio/diamondDemo.R')
source('D:/Program Files/RStudio/diamondDemo.R')
head(diamond)
source('D:/Program Files/RStudio/diamondDemo.R')
diamond$carat
carat
source('D:/Program Files/RStudio/diamondDemo.R')
quit()
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
install.packages("rvest")
source('D:/Program Files/RStudio/bond.R')
View(bond.films)
print(html_nodes(bond.wiki, "table"))
source('D:/Program Files/RStudio/bond.R')
View(bond.films)
head(bond.films)
?%<>%
?"%<>%"
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
names(bond.films)
?make.names
View(bond.films)
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
?setNames
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
View(bond.films)
?head
source('D:/Program Files/RStudio/bond.R')
View(bond.films)
source('D:/Program Files/RStudio/bond.R')
View(bond.films)
source('D:/Program Files/RStudio/bond.R')
View(bond.films)
View(bond.films)
source('D:/Program Files/RStudio/bond.R')
View(bond.films)
View(bond.films)
source('D:/Program Files/RStudio/bond.R')
View(bond.films)
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
View(bond.films)
View(bond.films)
source('D:/Program Files/RStudio/bond.R')
View(bond.films)
source('D:/Program Files/RStudio/bond.R')
View(bond.ratings)
View(bond.ratings)
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
View(bond.dta)
source('D:/Program Files/RStudio/bond.R')
View(bond.dta)
View(bond.films)
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
source('D:/Program Files/RStudio/bond.R')
quit()
setwd("d:/InternalProjects/R/RegModels-Project")
setwd("d:/InternalProjects/R/RegModels-Project")
